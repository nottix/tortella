.TH "/media/store/Informatica/C_C++/Projects_Linux/TorTella_gnu/src/logger.h" 3 "19 Jun 2008" "Version 0.1" "TorTella" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/media/store/Informatica/C_C++/Projects_Linux/TorTella_gnu/src/logger.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdlib.h>\fP
.br
\fC#include <stdio.h>\fP
.br
\fC#include <fcntl.h>\fP
.br
\fC#include <unistd.h>\fP
.br
\fC#include <sys/types.h>\fP
.br
\fC#include <sys/stat.h>\fP
.br
\fC#include <time.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <stdarg.h>\fP
.br
\fC#include <pthread.h>\fP
.br
\fC#include 'common.h'\fP
.br
\fC#include 'confmanager.h'\fP
.br

.SS "Definizioni"

.in +1c
.ti -1c
.RI "#define \fBALARM_INFO\fP   0"
.br
.RI "\fIDefinizione dei livelli del logger. \fP"
.ti -1c
.RI "#define \fBINFO\fP   1"
.br
.ti -1c
.RI "#define \fBCTRL_INFO\fP   2"
.br
.ti -1c
.RI "#define \fBSYS_INFO\fP   3"
.br
.ti -1c
.RI "#define \fBPAC_INFO\fP   4"
.br
.ti -1c
.RI "#define \fBHTTP_INFO\fP   5"
.br
.ti -1c
.RI "#define \fBTORTELLA_INFO\fP   6"
.br
.ti -1c
.RI "#define \fBSOCK_INFO\fP   7"
.br
.in -1c
.SS "Funzioni"

.in +1c
.ti -1c
.RI "int \fBlogger_init\fP (int verbose_level)"
.br
.RI "\fIInizializza il logger, scegliendo come path del file su cui scrivere il valore presente nel file di configurazione. \fP"
.ti -1c
.RI "int \fBlogger_close\fP ()"
.br
.RI "\fIChiude il file su cui il logger stava salvando le informazioni. \fP"
.ti -1c
.RI "char * \fBget_timestamp\fP ()"
.br
.RI "\fIRitorna un timestamp. \fP"
.ti -1c
.RI "int \fBlogger\fP (int type, const char *text,...)"
.br
.RI "\fISi comporta come una printf, ma oltre alla stampa a video viene eseguita anche una scrittura su file in base al livello di verbosita'. \fP"
.in -1c
.SS "Variabili"

.in +1c
.ti -1c
.RI "static char * \fBpathname\fP"
.br
.ti -1c
.RI "static FILE * \fBfd_file\fP"
.br
.ti -1c
.RI "static pthread_mutex_t \fBlogger_mutex\fP"
.br
.ti -1c
.RI "static int \fBverbose_l\fP = 0"
.br
.in -1c
.SH "Documentazione delle definizioni"
.PP 
.SS "#define ALARM_INFO   0"
.PP
Definizione dei livelli del logger. 
.PP
Definizione alla linea 36 del file logger.h.
.SS "#define CTRL_INFO   2"
.PP
Definizione alla linea 38 del file logger.h.
.SS "#define HTTP_INFO   5"
.PP
Definizione alla linea 41 del file logger.h.
.SS "#define INFO   1"
.PP
Definizione alla linea 37 del file logger.h.
.SS "#define PAC_INFO   4"
.PP
Definizione alla linea 40 del file logger.h.
.SS "#define SOCK_INFO   7"
.PP
Definizione alla linea 43 del file logger.h.
.SS "#define SYS_INFO   3"
.PP
Definizione alla linea 39 del file logger.h.
.SS "#define TORTELLA_INFO   6"
.PP
Definizione alla linea 42 del file logger.h.
.SH "Documentazione delle funzioni"
.PP 
.SS "char* get_timestamp ()"
.PP
Ritorna un timestamp. 
.PP
Esempio: Tue Jun 17 16:26:28 2008 
.PP
Definizione alla linea 47 del file logger.c.
.SS "int logger (int type, const char * text,  ...)"
.PP
Si comporta come una printf, ma oltre alla stampa a video viene eseguita anche una scrittura su file in base al livello di verbosita'. 
.PP
Definizione alla linea 61 del file logger.c.
.SS "int logger_close ()"
.PP
Chiude il file su cui il logger stava salvando le informazioni. 
.PP
Definizione alla linea 39 del file logger.c.
.SS "int logger_init (int verbose_level)"
.PP
Inizializza il logger, scegliendo come path del file su cui scrivere il valore presente nel file di configurazione. 
.PP
Il parametro verbose_level serve per specificare fino a quale livello il logger deve salvare le informazioni. Viene inizializzato anche un mutex per evitare accessi simultanei. 
.PP
Definizione alla linea 25 del file logger.c.
.SH "Documentazione delle variabili"
.PP 
.SS "FILE* \fBfd_file\fP\fC [static]\fP"
.PP
Definizione alla linea 47 del file logger.h.
.SS "pthread_mutex_t \fBlogger_mutex\fP\fC [static]\fP"
.PP
Definizione alla linea 49 del file logger.h.
.SS "char* \fBpathname\fP\fC [static]\fP"
.PP
Definizione alla linea 45 del file logger.h.
.SS "int \fBverbose_l\fP = 0\fC [static]\fP"
.PP
Definizione alla linea 51 del file logger.h.
.SH "Autore"
.PP 
Generato automaticamente da Doxygen per TorTella a partire dal codice sorgente.
